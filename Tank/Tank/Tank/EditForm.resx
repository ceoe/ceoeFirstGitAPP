<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="radbtnGrass.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhPAA8AIcAAAAAAP///0JVVi5aVDNeUy1ZSzFcTjtjUzdeTTdZSi1gSSxZRDRiTTJTRDJeSTBa
        RjxMRDNaRTljTSZWPDJeRTddRypWPDJhRTFlRS1bPTBdQDVhRTdkRzRcQileOi1iPjFgQTJmQjJbPzpf
        RTVpRDVhQjJWPDFgPThaQS1gOTRkPjdlQTxmRTFcOTVhPStaMzVpPDFhODBdNjtoQjZdPDRiOixgMTph
        PjFlNTZlNzloOgAZADBcLzRgMjNnLy1fKDJjLDpiNTNoKjhoMDFnIjJjJS5eIDlsKTBjHTdmJjFoGTxz
        JSVxACNsACtiEi9jFzZoHjxsJCp1AC1sCi55ACtqBDNxDjBmETdsGTpxGyxxACptACpqAChoAC9sBi1j
        CjVqETWCADR6ADJ2ADBzADBwAC5tADJtBjFnCTNqCzdmFTNzAC5pACthAS9lBDJqBThsDjRlD5rTazp7
        ADZ1ADZyADNwADJtADFpADdyBDxyC5TVXTVuADVrADhuBjprCkJ1EpXZVZjbWpTNYDt1ADNlADhoCJfe
        TZHSSpPYTZXUU57eXDptATpmBo7ZN5bbQ5LVQ53cU5XQTpvWVp3WXpXcO5jgQZnXTI/iG5nZPZzdP5TV
        PZ3dSKLbT4zjAKD0Go7VIZbZL53jNZndNaHhQ57XRpbuAJPtAJTrAJXpAJLoAJHlAJXrApjuBJzxBZLn
        BZbpBpnuCJLkCZPgC5fqDJXkDJboEZDcEZbhEqDqHpvkHpjdH53iKKDnK5jcKZzeL5vxAJ7uAJntAJfr
        AJvrAJnqAJfoAJnoAJjnAJTmAJfmAJTkAJfkAJTgAI/eAKL0AZzrApjnApbnApnrA5vpA5fpA5TiA5nl
        BZrqBpbmBpfiB5rmCZ3qC5/uDprkDqHtEpzpEpzlFrPbZLzbhMPYm6LtAJvpAJ7pAJvnAJ3mAJnlAJvk
        AJjiAZ/tA53mBZviBZ/rBqPxB6DqC6XgMLDoN7rddL/ieJ7gAKLlAZ3eBKPlDKrrDrDpLqzsBrbmPP//
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAAPAA8AAAI/wB3ABgoooSKF07AfNFTZs0QH0CA
        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
        hOAmv6AL4KC/w2ALkBUQADs=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f////n////5////+f///////
</value>
  </data>
</root>